#!/usr/bin/python
#!/usr/bin/env python3

import os
import sys

fun_list = []
buf_list = []
buf_list_ret=[]

def list_fun():
	open("buff_dump","w").close()
	nm_str='nm -P '+sys.argv[1]+' | awk \'$2 == "T" {print $1}\' | awk \'/^[^_]/\'> buff_dump'
#print(nm_str)
	os.system(nm_str)
#os.system('nm -P ret2text | awk \'$2 == "T" {print $1}\' | awk \'/^[^_]/\'> buff_dump')  #nm -P buff | awk '$2 == "T" {print $1}' | awk '/^[^_]/'
#os.system('nm -P buff | awk \'$2 == "T" {print $1}\' | awk \'/^[^_]/\'');  #nm -P buff | awk '$2 == "T" {print $1}' | awk '/^[^_]/'

	with open('buff_dump') as f:
		fun_list = f.readlines()
# you may also want to remove whitespace characters like `\n` at the end of each line
	fun_list = [x.strip() for x in fun_list] 
	return fun_list

def list_buff(fun_list):
	for p in fun_list: 
		#print("\n"+p+"\n------------\n")
		open("temp","w").close()
	#objdump -D ret2text | awk '$2=="<secret>:" {f=1} $NF=="ret" {f=0} f'
		od_str='objdump -D ' + sys.argv[1]+' | awk \'$2=="<'+p+'>:"{f=1} $NF=="ret" {f=0} f\'' #'objdump -D ret2text | awk \'$2=="<'+p+'>:"{f=1} $NF=="ret" {f=0} f\'' 	
	#print(od_str)
		fn_str=p+"_dump"
	#print(fn_str)
		os.system(od_str+ ' > '+ fn_str)
		os.system('cat '+fn_str+ '| awk \'$(NF-1)=="sub"\' | awk \'{print $NF}\'> temp')
		buf_list = []
		with open('temp') as f2:
			buf_list=f2.readlines()
			buf_list = [x.strip() for x in buf_list]
		for i,item in enumerate(buf_list):
			item=int(item.split(',')[0].split('x')[1],16)
		#print(s)
		#print(type(l))
		#buff_list.append(int(s, 16))
			buf_list[i]= item

		#print('Buffer Size in '+p+' is '+ str(buf_list[0])+' \nAlso Other Possible buffer sizes can be:')
		print('\n'+'The list of possible buffers in binary:')		
		for i in buf_list:
			print(i)
		buf_list_ret.append(buf_list[0])
		return buf_list_ret


	








